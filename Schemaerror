package com.rbs.bdd.application.service;


import com.rbs.bdd.application.exception.SchemaValidationException;
import com.rbs.bdd.application.port.out.AccountValidationPort;
import com.rbs.bdd.generated.*;
import com.rbs.bdd.infrastructure.soap.model.Envelope;
import jakarta.xml.bind.JAXBContext;
import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.Unmarshaller;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;


import java.io.FileNotFoundException;
import java.io.InputStream;
import java.lang.Exception;

@Service
@RequiredArgsConstructor
public class AccountValidationService implements AccountValidationPort {

    @Override
    public void validateSchema(ValidateArrangementForPaymentRequest request) {
        // Schema is validated automatically by Spring WS
        System.out.println("Schema Validation ");
    }

    @Override
    public ValidateArrangementForPaymentResponse validateBusinessRules(ValidateArrangementForPaymentRequest request) {
        try {
            System.out.println("Process started for business logic");

            // Create JAXB context for the envelope wrapper class
            JAXBContext context = JAXBContext.newInstance(Envelope.class);
            Unmarshaller unmarshaller = context.createUnmarshaller();

            // Load the static SOAP response
            InputStream xml = getClass().getClassLoader().getResourceAsStream("static-response/response1.xml");
            if (xml == null) {
                throw new FileNotFoundException("File static-response/response1.xml not found.");
            }

            // Unmarshal the full SOAP envelope
            Envelope envelope = (Envelope) unmarshaller.unmarshal(xml);
            if(envelope==null || envelope.getBody()==null)
            {
                throw new SchemaValidationException("SOAP envelope or body is null");

            }
            ValidateArrangementForPaymentResponse response = envelope.getBody().getValidateArrangementForPaymentResponse();

            if(response==null)
            {
                throw new SchemaValidationException("SOAP envelope or body is null");

            }
            ValidateArrangementForPaymentContent content=response.getResponse();
            if(content ==null)
            {
                throw new SchemaValidationException("SOAP envelope or body is null");

            }
            ResponseHeader header= content.getResponseHeader();

            // Business logic
            String operatingBrand = request.getRequestHeader().getOperatingBrand();
            if ("ALL".equalsIgnoreCase(operatingBrand)) {
                ProcessingIdentifier responseId= header.getResponseId();
                if(responseId==null)
                {
                   responseId= new ProcessingIdentifier();
                   header.setResponseId(responseId);

                }
                responseId.setSystemId("ModifiedESP");
                responseId.setTransactionId("ModifiedTxn123");

            }

            return response;
        } catch (Exception e) {
            throw new SchemaValidationException("Failed to process static response XML", e);
        }
    }
}
